name: Build

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install

      - name: Restore Docker image cache
        uses: actions/cache@v2
        with:
          path: /var/lib/docker
          key: ${{ runner.os }}-docker-${{ hashFiles('**/Dockerfile') }}

      - name: Build Docker image
        run: |
          DOCKER_TAG=sha-${{ github.sha }}
          docker build -t ghcr.io/wfgen/zadanie2docker:${DOCKER_TAG} .
          echo $DOCKER_TAG > IMAGE_TAG
        env:
          DOCKER_CLI_EXPERIMENTAL: enabled

      - name: Save Docker image cache
        uses: actions/cache@v2
        with:
          path: /var/lib/docker
          key: ${{ runner.os }}-docker-${{ hashFiles('**/Dockerfile') }}

      - name: Install Trivy
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin

      - name: Scan Docker image for vulnerabilities
        run: |
          trivy image ghcr.io/wfgen/zadanie2docker:${{ steps.build.outputs.IMAGE_TAG }}

      - name: Display vulnerabilities report
        run: |
          trivy image -f json ghcr.io/wfgen/zadanie2docker:${{ steps.build.outputs.IMAGE_TAG }} > report.json
          cat report.json

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: github
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Tag and push Docker image
        run: |
          docker tag ghcr.io/wfgen/zadanie2docker:${{ steps.build.outputs.IMAGE_TAG }} ghcr.io/wfgen/zadanie2docker:latest
          docker push ghcr.io/wfgen/zadanie2docker:${{ steps.build.outputs.IMAGE_TAG }}
          docker push ghcr.io/wfgen/zadanie2docker:latest

      - name: Show version
        run: |
          echo "Generated version: ${{ steps.build.outputs.IMAGE_TAG }}"
