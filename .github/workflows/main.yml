name: Build

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: ~/.docker
          key: ${{ runner.os }}-docker-${{ hashFiles('**/Dockerfile') }}

      - name: Build Docker image
        run: |
          docker build --cache-from my-docker-image -t my-docker-image .

      - name: Install Trivy
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin

      - name: Scan Docker image for vulnerabilities
        run: |
          trivy image my-docker-image

      - name: Display vulnerabilities report
        run: |
          trivy image -f json my-docker-image > report.json
          cat report.json

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: github
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get latest image version
        id: get-version
        run: |
          echo "::set-output name=version::$(docker images --format "{{.Tag}}" my-docker-image | sort -V | tail -1)"

      - name: Generate new image version
        id: generate-version
        run: |
          echo "::set-output name=version::$(python generate_version.py ${{ steps.get-version.outputs.version }})"

      - name: Push Docker image
        run: |
          docker tag my-docker-image ghcr.io/wfgen/zadanie2docker:${{ steps.generate-version.outputs.version }}
          docker push ghcr.io/wfgen/zadanie2docker:${{ steps.generate-version.outputs.version }}
